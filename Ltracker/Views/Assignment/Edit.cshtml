@model Ltracker.Models.EditAssignmentViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>EditAssignmentViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model=> model.IndividualId)
        @Html.HiddenFor(model => model.CourseId)
        @Html.HiddenFor(model=>model.AssignmentDate)

        <label class="control-label">
            Asignación
        </label>
        <div class="form-group">
            <h4 class="col-md-10 text-success">
                @Model.Course.Name -> @Model.Individual.Name (@Model.AssignmentDate.Value.ToShortDateString())
            </h4>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IsCompleted, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.IsCompleted, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.IsCompleted, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FinishDate, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FinishDate, new { htmlAttributes = new { @class = "form-control datepicker" } })
                @Html.ValidationMessageFor(model => model.FinishDate, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TotalHours, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TotalHours, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TotalHours, "", new { @class = "text-danger" })
            </div>
        </div>
        @if (ViewBag.ErrorMessage != null)
        {
            <div class="alert alert-danger" role="alert">
                @ViewBag.ErrorMessage
            </div>
        }
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

<script type="text/javascript">
        //scopes public y private
        //module pattern
    var newAssignment = (function ()
    {
            //privado

            //este método si es accesible
            var start = function ()
            {
                Globalize.culture("es-MX");
                $.validator.methods.date = function (value, element)
                {
                    return this.optional(element) || Globalize.parseDate(value);
                };
                $('.datepicker').datepicker
                    ({
                        format: 'dd/mm/yyyy',
                        language: 'es-MX',
                        autoclose: true
                    });
            }

            //Este método no está accesible
            var doSave = function(){

            }
            //público
            return {
                start:start
            }
        })();

        $(function ()
        {
            newAssignment.start();
        })

</script>
}
