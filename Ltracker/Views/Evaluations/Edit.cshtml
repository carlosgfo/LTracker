@model Ltracker.Models.EditEvaluationsViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Calificaciones</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.EvaluationId)
        @Html.HiddenFor(model => model.AssignedCourseId)

        <div class="form-group">
            @Html.LabelFor(model => model.Theorical, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Theorical, new { htmlAttributes = new { @class = "form-control", @id = "theorical" } })
                @Html.ValidationMessageFor(model => model.Theorical, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Practical, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Practical, new { htmlAttributes = new { @class = "form-control", @id= "practical" } })
                @Html.ValidationMessageFor(model => model.Practical, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Total, htmlAttributes: new { @class = "control-label col-md-2", @id="total" })
            <div class="col-md-10">
                <h6>@(Model.Total == null?0:Model.Total)</h6>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    <a href="@Url.Content("~/Assignment/Index")">Volver</a>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @*<script type="text/javascript">
        //module pattern
        var getAverage = (function () {
            //privado

            //este método si es accesible
            var calculate = function ()
            {

                //$("input[id$='theorical']"),"input[id$='practical']")).blur(function () 
            {


                    $("input[id$='total']").val(@(Model.Total == null?0:Model.Total));

               // });
            }
            //público
            return {
                calculate: calculate
            }
        })();

        $(function () {
            getAverage.calculate();
        })
    </script>*@
    }
        
